import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import r2_score
import altair as alt


# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ
st.set_page_config(
    page_title="INC 5000 Companies Analysis Dashboard",
    page_icon="üìä",
    layout="wide",
    initial_sidebar_state="expanded",
    menu_items={
        'Get Help': 'https://docs.streamlit.io/',
        'Report a bug': 'https://github.com/streamlit/streamlit/issues',
        'About': '–¶–µ–π –¥–æ–¥–∞—Ç–æ–∫ –¥–æ–∑–≤–æ–ª—è—î –∞–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –¥–∞–Ω—ñ –ø—Ä–æ 5000 –Ω–∞–π—à–≤–∏–¥—à–µ –∑—Ä–æ—Å—Ç–∞—é—á–∏—Ö –ø—Ä–∏–≤–∞—Ç–Ω–∏—Ö –∫–æ–º–ø–∞–Ω—ñ–π –°–®–ê –∑–∞ 2014 —Ä—ñ–∫. \
–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –ø–∞–Ω–µ–ª—å —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–µ—Ä–µ–≥–ª—è–¥—É.'
    }
)

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
@st.cache_data
def load_data():
    df = pd.read_csv("Data Set- Inc5000 Company List_2014.csv")
    df = df.drop(columns=["_input", "_num", "_widgetName", "_source", "_resultNumber", "_pageUrl", "id", "url"])
    df = df.dropna()
    return df

df = load_data()

# –§—ñ–ª—å—Ç—Ä–∏
st.sidebar.title("–ü–∞–Ω–µ–ª—å —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó")

industry = st.sidebar.selectbox("–û–±–µ—Ä—ñ—Ç—å —ñ–Ω–¥—É—Å—Ç—Ä—ñ—é", sorted(df["industry"].unique()))
states = st.sidebar.multiselect("–û–±–µ—Ä—ñ—Ç—å —à—Ç–∞—Ç–∏", sorted(df["state_l"].unique()), default=["California", "Texas"])
revenue_filter = st.sidebar.radio("–î—ñ–∞–ø–∞–∑–æ–Ω –≤–∏—Ä—É—á–∫–∏", ["–í—Å—ñ", "–ú–µ–Ω—à–µ 10–ú", "–í—ñ–¥ 10–ú –¥–æ 100–ú", "–ë—ñ–ª—å—à–µ 100–ú"])
growth_checkbox = st.sidebar.checkbox("–ü–æ–∫–∞–∑–∞—Ç–∏ –ª–∏—à–µ –∫–æ–º–ø–∞–Ω—ñ—ó –∑ —Ä–æ—Å—Ç–æ–º > 500%")
chart_option = st.sidebar.radio(
    "üìà –û–±–µ—Ä—ñ—Ç—å –≥—Ä–∞—Ñ—ñ–∫ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É:",
    [
        "–î–æ—Ö—ñ–¥ –ø—Ä–æ—Ç–∏ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è",
        "–ì—ñ—Å—Ç–æ–≥—Ä–∞–º–∞ —Ä–æ—Å—Ç—É",
        "Boxplot –≤–∏—Ä—É—á–∫–∏ –ø–æ —à—Ç–∞—Ç–∞–º",
        "Scatterplot —Ä–æ—Å—Ç—É –ø—Ä–æ—Ç–∏ –≤–∏—Ä—É—á–∫–∏"
    ]
)

# –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–∏–π –±–ª–æ–∫
st.sidebar.markdown("---")
st.sidebar.markdown(" **–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è**: \n–§—ñ–ª—å—Ç—Ä—É–π—Ç–µ –¥–∞–Ω—ñ –∑–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —ñ –ø–µ—Ä–µ–≥–ª—è–¥–∞–π—Ç–µ –≥—Ä–∞—Ñ—ñ–∫–∏ —Ç–∞ —Ç–∞–±–ª–∏—Ü—ñ –Ω–∞ –ø–∞–Ω–µ–ª—ñ –ø—Ä–∞–≤–æ—Ä—É—á.")
st.sidebar.markdown(" **–ê–≤—Ç–æ—Ä**: Parkhomuk Amina")

# –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
filtered_df = df[df["industry"] == industry]
if states:
    filtered_df = filtered_df[filtered_df["state_l"].isin(states)]
if revenue_filter != "–í—Å—ñ":
    if revenue_filter == "–ú–µ–Ω—à–µ 10–ú":
        filtered_df = filtered_df[filtered_df["revenue"] < 1e7]
    elif revenue_filter == "–í—ñ–¥ 10–ú –¥–æ 100–ú":
        filtered_df = filtered_df[(filtered_df["revenue"] >= 1e7) & (filtered_df["revenue"] <= 1e8)]
    else:
        filtered_df = filtered_df[filtered_df["revenue"] > 1e8]
if growth_checkbox:
    filtered_df = filtered_df[filtered_df["growth"] > 500]

st.title("üìä INC 5000 Companies Analysis Dashboard")

# –í–∏–±—ñ—Ä –∫–æ–ª–æ–Ω–æ–∫
st.subheader("–û–±–µ—Ä—ñ—Ç—å, —è–∫—ñ —Å—Ç–æ–≤–ø—Ü—ñ —Ç–∞–±–ª–∏—Ü—ñ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏")
columns_to_show = st.multiselect("–û–±–µ—Ä—ñ—Ç—å –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É", filtered_df.columns,
                                 default=["company", "city", "state_l", "revenue", "growth"])
st.dataframe(filtered_df[columns_to_show])

# –ì—Ä–∞—Ñ—ñ–∫–∏

# 1: –î–æ—Ö—ñ–¥ –ø—Ä–æ—Ç–∏ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è
if chart_option == "–î–æ—Ö—ñ–¥ –ø—Ä–æ—Ç–∏ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è":
    st.subheader("üìä –î–æ—Ö—ñ–¥ –ø—Ä–æ—Ç–∏ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è")
    chart = alt.Chart(filtered_df).mark_circle(size=60).encode(
        x=alt.X('growth:Q', title='–ó—Ä–æ—Å—Ç–∞–Ω–Ω—è (%)'),
        y=alt.Y('revenue:Q', title='–î–æ—Ö—ñ–¥ (USD)'),
        color=alt.Color('industry:N', title='–Ü–Ω–¥—É—Å—Ç—Ä—ñ—è'),
        tooltip=['company:N', 'growth:Q', 'revenue:Q', 'industry:N']
    ).interactive().properties(
        title="–ó–∞–ª–µ–∂–Ω—ñ—Å—Ç—å –¥–æ—Ö–æ–¥—É –≤—ñ–¥ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è"
    )
    st.altair_chart(chart, use_container_width=True)

# 2: –ì—ñ—Å—Ç–æ–≥—Ä–∞–º–∞ —Ä–æ—Å—Ç—É
if chart_option == " –ì—ñ—Å—Ç–æ–≥—Ä–∞–º–∞ —Ä–æ—Å—Ç—É":
    st.subheader("üìä –†–æ–∑–ø–æ–¥—ñ–ª —Ä–æ—Å—Ç—É –∫–æ–º–ø–∞–Ω—ñ–π")
    fig1, ax1 = plt.subplots()
    sns.histplot(filtered_df["growth"], bins=30, ax=ax1)
    st.pyplot(fig1)

# 3: Boxplot –≤–∏—Ä—É—á–∫–∏ –ø–æ —à—Ç–∞—Ç–∞–º
if chart_option == "Boxplot –≤–∏—Ä—É—á–∫–∏ –ø–æ —à—Ç–∞—Ç–∞–º":
    st.subheader("üìä –í–∏—Ä—É—á–∫–∞ –ø–æ —à—Ç–∞—Ç–∞–º")
    fig2, ax2 = plt.subplots()
    sns.boxplot(x="state_l", y="revenue", data=filtered_df, ax=ax2)
    ax2.tick_params(axis='x', rotation=90)
    st.pyplot(fig2)

# 4: Scatterplot —Ä–æ—Å—Ç—É –ø—Ä–æ—Ç–∏ –≤–∏—Ä—É—á–∫–∏
if chart_option == "Scatterplot —Ä–æ—Å—Ç—É –ø—Ä–æ—Ç–∏ –≤–∏—Ä—É—á–∫–∏":
    st.subheader("üìä –ó–∞–ª–µ–∂–Ω—ñ—Å—Ç—å —Ä–æ—Å—Ç—É —ñ –≤–∏—Ä—É—á–∫–∏ –ø–æ —ñ–Ω–¥—É—Å—Ç—Ä—ñ—è—Ö")
    fig3, ax3 = plt.subplots()
    sns.scatterplot(x="growth", y="revenue", hue="industry", data=filtered_df, ax=ax3)
    st.pyplot(fig3)

# --- –ë–ª–æ–∫ –ø–æ–±—É–¥–æ–≤–∏ —Ä–µ–≥—Ä–µ—Å—ñ—ó –∑–∞ –≤–∏–±–æ—Ä–æ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ---
st.sidebar.markdown("### –ü–æ–±—É–¥–æ–≤–∞ —Ä–µ–≥—Ä–µ—Å—ñ—ó")
numeric_columns = df.select_dtypes(include=["float64", "int64"]).columns.tolist()

reg_x = st.sidebar.selectbox("–û–±–µ—Ä—ñ—Ç—å –∑–º—ñ–Ω–Ω—É X (–Ω–µ–∑–∞–ª–µ–∂–Ω–∞)", numeric_columns, index=0)
reg_y = st.sidebar.selectbox("–û–±–µ—Ä—ñ—Ç—å –∑–º—ñ–Ω–Ω—É Y (–∑–∞–ª–µ–∂–Ω–∞)", numeric_columns, index=1)
show_regression = st.sidebar.checkbox("–ü–æ–∫–∞–∑–∞—Ç–∏ —Ä–µ–≥—Ä–µ—Å—ñ–π–Ω—É –º–æ–¥–µ–ª—å")

if show_regression:
    st.subheader(f"üìà –õ—ñ–Ω—ñ–π–Ω–∞ —Ä–µ–≥—Ä–µ—Å—ñ—è: {reg_y} ~ {reg_x}")
    df_reg = df[[reg_x, reg_y]].dropna()

    if df_reg.shape[0] >= 2:
        model = LinearRegression()
        model.fit(df_reg[[reg_x]], df_reg[reg_y])
        y_pred = model.predict(df_reg[[reg_x]])

        coef = model.coef_[0]
        intercept = model.intercept_
        r2 = model.score(df_reg[[reg_x]], df_reg[reg_y])

        st.markdown(f"**–ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç –Ω–∞—Ö–∏–ª—É (Œ≤):** {coef:.4f}")
        st.markdown(f"**–ó—Å—É–≤ (intercept):** {intercept:.4f}")
        st.markdown(f"**R¬≤:** {r2:.4f}")

        fig, ax = plt.subplots(figsize=(8, 5))
        sns.scatterplot(data=df_reg, x=reg_x, y=reg_y, ax=ax)
        sns.lineplot(x=df_reg[reg_x], y=y_pred, color='red', ax=ax)
        ax.set_title(f"–†–µ–≥—Ä–µ—Å—ñ—è {reg_y} ~ {reg_x}")
        st.pyplot(fig)
    else:
        st.warning("–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –¥–∞–Ω–∏—Ö –¥–ª—è –ø–æ–±—É–¥–æ–≤–∏ —Ä–µ–≥—Ä–µ—Å—ñ—ó.")
